const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const admin = require('firebase-admin');
const serviceAccount = require('./login-mnoc-700-mhz-firebase-adminsdk-fbsvc-bfbd0dd4b5.json');

// === üîê ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firebase Admin ===
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://login-mnoc-700-mhz-default-rtdb.asia-southeast1.firebasedatabase.app"
});

const db = admin.database();
const token = '8490280302:AAHjm6KmkgDY9YXS5YaS8UhciB4vUulCJyc'; // üîê Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∏‡∏ì

// === ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö Webhook ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó ===
async function startBot() {
  try {
    const response = await axios.get(`https://api.telegram.org/bot${token}/deleteWebhook`);
    console.log("‚úÖ Webhook deleted:", response.data);

    const bot = new TelegramBot(token, { polling: true });
    console.log("ü§ñ Telegram Bot is running and listening...");

    // === üì• ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Telegram ===
    bot.on('message', (msg) => {
      const chatId = msg.chat.id;
      const text = msg.text;

      console.log(`[${new Date().toLocaleString()}] üì® [Message from ${chatId}]: ${text}`);

      // ‚úÖ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
      const patterns = [
        /(?:EnodeB|eNodeB|Site)?\s*(\d{5,6})\s*(?:is|status:|->)?\s*(DOWN|UP|Normal)/i,
        /‚õî\s*EnodeB\s*(\d{5,6})\s*is\s*DOWN/i,
        /‚úÖ\s*EnodeB\s*(\d{5,6})\s*is\s*UP/i
      ];

      let matched = false;

      for (const pattern of patterns) {
        const match = text.match(pattern);
        if (match) {
          matched = true;

          const enodebId = match[1];
          const rawStatus = match[2]?.toUpperCase() || 'UNKNOWN';
          const status = (rawStatus === 'DOWN') ? 'DOWN' : 'UP';

          const data = {
            status: status,
            updated: Date.now()
          };

          db.ref("enodeb_alarms/" + enodebId).set(data)
            .then(() => {
              console.log(`üì° Saved to Firebase: EnodeB ${enodebId} => ${status}`);
              bot.sendMessage(chatId, `üì° EnodeB ${enodebId} ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô "${status}" ‡πÅ‡∏•‡πâ‡∏ß`);
            })
            .catch((err) => {
              console.error('‚ùå Firebase write error:', err);
              bot.sendMessage(chatId, "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Firebase");
            });

          break;
        }
      }

      if (!matched) {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö");
        bot.sendMessage(chatId,
          "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:\nEnodeB <ID> is UP ‡∏´‡∏£‡∏∑‡∏≠ DOWN\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n‚Ä¢ EnodeB 123456 is DOWN\n‚Ä¢ ‚õî EnodeB 123456 is DOWN\n‚Ä¢ ‚úÖ EnodeB 123456 is UP"
        );
      }
    });

  } catch (error) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö Webhook ‡πÑ‡∏î‡πâ:", error.message);
  }
}

startBot();
